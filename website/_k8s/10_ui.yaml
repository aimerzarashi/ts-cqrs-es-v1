##################################################################################################
# website-ui
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: website-ui
  labels:
    app: website-ui
    service: website
spec:
  ports:
    - port: 3000
      name: tcp
      appProtocol: http
  selector:
    app: website-ui
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: website-ui
  labels:
    account: website-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website-ui
  labels:
    app: website-ui
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: website-ui
      version: v1
  template:
    metadata:
      labels:
        app: website-ui
        version: v1
    spec:
      serviceAccountName: website-ui
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
        - name: website-ui
          image: node:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
          tty: true
          ports:
            - containerPort: 3000
          workingDir: /my-app
          command:
            - "sh"
            - "-c"
            - |
              npm install;
              (npm run prisma migrate dev; echo);
              npm run dev;
          env:
            - name: AUTHN_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: authentication
                  key: AUTHN_SECRET_KEY
            - name: AUTHN_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: authentication
                  key: AUTHN_PUBLIC_KEY
          volumeMounts:
            - name: website-ui-app
              mountPath: /my-app
      volumes:
        - name: website-ui-app
          persistentVolumeClaim:
            claimName: website-ui-app
      initContainers:
        - name: wait-for-iam
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              until curl -sSf "http://iam-provider:8080/realms/aimerzarashi/protocol/openid-connect/certs" >/dev/null; do
                echo "Waiting for the API to become available..."
                sleep 1
              done
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: website-ui-app
  labels:
    app: website-ui
spec:
  storageClassName: website-ui-app
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
