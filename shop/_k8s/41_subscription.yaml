##################################################################################################
# shop-subscription
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: shop-subscription
  labels:
    app: shop-subscription
    service: shop
spec:
  ports:
    - port: 3000
      name: tcp
      appProtocol: http
  selector:
    app: shop-subscription
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shop-subscription
  labels:
    account: shop-subscription
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-subscription
  labels:
    app: shop-subscription
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shop-subscription
      version: v1
  template:
    metadata:
      labels:
        app: shop-subscription
        version: v1
    spec:
      serviceAccountName: shop-subscription
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
        - name: shop-subscription
          image: node:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 600m
              memory: 600Mi
            requests:
              cpu: 200m
              memory: 200Mi
          tty: true
          ports:
            - containerPort: 3000
          workingDir: /my-app
          command:
            - "sh"
            - "-c"
            - |
              npm install;
              (npm run prisma migrate dev; echo);
              npm run dev;
          volumeMounts:
            - name: shop-subscription-app
              mountPath: /my-app
      initContainers:
        - name: init-env
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              echo "" > .env.work
          volumeMounts:
            - name: shop-subscription-app
              mountPath: /my-app
        - name: init-env-db
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          workingDir: /my-app
          command:
            - sh
            - -c
            - |
              echo 'DATABASE_URL="postgres://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"' >> .env.work
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-resource
                  key: POSTGRESQL_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-resource
                  key: POSTGRESQL_PASSWORD
          envFrom:
            - configMapRef:
                name: shop-subscription
          volumeMounts:
            - name: shop-subscription-app
              mountPath: /my-app
        - name: wait-db
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              while ! nc -z database-resource 5432; do
                echo "Waiting..."
                sleep 5
              done
        - name: finish
          image: curlimages/curl:latest
          imagePullPolicy: IfNotPresent
          workingDir: /my-app
          command:
            - sh
            - -c
            - |
              mv .env.work .env.local
          volumeMounts:
            - name: shop-subscription-app
              mountPath: /my-app
      volumes:
        - name: shop-subscription-app
          persistentVolumeClaim:
            claimName: shop-subscription-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shop-subscription
data:
  DB_HOST: "database-resource"
  DB_PORT: "5432"
  DB_NAME: "shop"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shop-subscription-app
  labels:
    app: shop-subscription
spec:
  storageClassName: shop-subscription-app
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
