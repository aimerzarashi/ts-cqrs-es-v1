/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = Record<string, never>;

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @enum {string} */
    StockItemEventType: "Created" | "Updated";
    StockItemEvent: {
      schemas?: Record<string, never>;
      payload: {
        before?: Record<string, never>;
        after: {
          /** Format: uuid */
          id: string;
          /** Format: date-time */
          occurredAt: string;
        } & (components["schemas"]["StockItemCreatedEvent"] | components["schemas"]["StockItemUpdatedEvent"]);
        source?: Record<string, never>;
        op?: string;
        ts_ms?: string;
      };
    };
    StockItemCreatedEvent: {
      /** Format: uuid */
      aggregateId: string;
      /** @constant */
      type: "Created";
      payload: {
        name: string;
        accountId: string;
      };
    };
    StockItemUpdatedEvent: {
      /** Format: uuid */
      aggregateId: string;
      /** @constant */
      type: "Updated";
      payload: {
        name: string;
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
