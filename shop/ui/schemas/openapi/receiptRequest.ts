/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/receipt/requests": {
    /** Register receipt request */
    post: {
      requestBody: components["requestBodies"]["ReceiptRequest"];
      responses: {
        /** @description Created */
        201: {
          content: never;
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Internal Server Error */
        500: {
          content: never;
        };
      };
    };
  };
  "/receipt/requests/{requestId}": {
    /** Update receipt request */
    put: {
      parameters: {
        path: {
          requestId: string;
        };
      };
      requestBody: components["requestBodies"]["ReceiptRequest"];
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: never;
        };
        /** @description Internal Server Error */
        500: {
          content: never;
        };
      };
    };
    /** Delete receipt request */
    delete: {
      parameters: {
        path: {
          requestId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: never;
        };
        /** @description Internal Server Error */
        500: {
          content: never;
        };
      };
    };
  };
  "/receipt/requests/{requestId}/items": {
    /** Register receipt request item */
    post: {
      parameters: {
        path: {
          requestId: string;
        };
      };
      requestBody: components["requestBodies"]["ReceiptRequestItem"];
      responses: {
        /** @description Created */
        201: {
          content: never;
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Internal Server Error */
        500: {
          content: never;
        };
      };
    };
  };
  "/receipt/requests/{requestId}/items/{itemId}": {
    /** Update receipt request item */
    put: {
      parameters: {
        path: {
          requestId: string;
          itemId: string;
        };
      };
      requestBody: components["requestBodies"]["ReceiptRequestItem"];
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: never;
        };
        /** @description Internal Server Error */
        500: {
          content: never;
        };
      };
    };
    /** Delete receipt request item */
    delete: {
      parameters: {
        path: {
          requestId: string;
          itemId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: never;
        };
        /** @description Internal Server Error */
        500: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: {
    ReceiptRequest: {
      content: {
        "application/json": {
          locationId: string;
        };
      };
    };
    ReceiptRequestItem: {
      content: {
        "application/json": {
          /** Format: uuid */
          stockItemId: string;
          quantity: number;
        };
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
